/* (C) Copyright 2019-2024 Robert Grimm
 * Licensed under the MIT License (https://opensource.org/licenses/MIT) */

/*
 * CSS CUSTOM PROPERTIES
 * ---------------------
 *
 * Edge >= 16; Firefox >= 31; Google Chrome >= 49; Safari >= 9.1;
 * iOS Safari >= 9.3; Google Chrome for Android >= 49; UC Browser Android 11.8;
 * Samsung Internet >= 5;
 *
 * PREFIXES
 * --------
 *
 * -webkit-filter
 * -moz-fit-content
 * -ms-hyphens, -webkit-hyphens
 * -o-object-fit
 * -webkit-print-color-adjust
 * -webkit-sticky
 * -webkit-text-decoration-color
 * -ms-text-size-adjust, -webkit-text-size-adjust
 */

@font-face {
  font-family: 'Bely';
  src: url(/assets/fonts/bely-regular.woff2),
    url(/assets/fonts/bely-regular.woff);
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(/assets/fonts/bely-italic.woff2),
    url(/assets/fonts/bely-italic.woff);
  font-style: italic;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(/assets/fonts/bely-bold.woff2),
    url(/assets/fonts/bely-bold.woff);
  font-style: normal;
  font-weight: bold;
  font-display: swap;
}

/*@font-face {
  font-family: 'Bely';
  src: url(/assets/fonts/bely-bold-italic.woff2),
    url(/assets/fonts/bely-bold-italic.woff);
  font-style: italic;
  font-weight: bold;
  font-display: swap;
}*/

@font-face {
  font-family: 'Bely Display';
  src: url(/assets/fonts/bely-display.woff2),
    url(/assets/fonts/bely-display.woff);
  font-style: normal;
  font-weight: bold;
  font-display: fallback;
}

@font-face {
  font-family: 'Bild';
  src: url(/assets/fonts/bild-variable.woff2),
    url(/assets/fonts/bild-variable.woff);
  font-style: normal;
  font-weight: bold;
  font-stretch: 60% 100%;
  font-display: fallback;
}

@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(/assets/fonts/bluu-suuperstar-medium.woff2),
    url(/assets/fonts/bluu-suuperstar-medium.woff);
  font-style: normal;
  font-weight: 500;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(/assets/fonts/bluu-suuperstar-bold.woff2),
    url(/assets/fonts/bluu-suuperstar-bold.woff);
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
}*/

@font-feature-values Bluu Suuperstar {
  @styleset {
    bluu: 1 3;
  }
}

@font-face {
  font-family: 'Reforma 2018';
  src: url(/assets/fonts/reforma-2018-gris.woff2),
    url(/assets/fonts/reforma-2018-gris.woff);
  font-style: normal;
  font-weight: normal;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Reforma 2018';
  src: url(/assets/fonts/reforma-2018-gris-italica.woff2),
    url(/assets/fonts/reforma-2018-gris-italica.woff);
  font-style: italic;
  font-weight: normal;
  font-display: fallback;
}

@font-face {
  font-family: 'Reforma 2018';
  src: url(/assets/fonts/reforma-2018-negra.woff2),
    url(/assets/fonts/reforma-2018-negra.woff);
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
}
*/

@font-face {
  font-family: 'DejaVu';
  src: url(/assets/fonts/dejavu-sans-mono-book.woff2),
    url(/assets/fonts/dejavu-sans-mono-book.woff);
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'DejaVu';
  src: url(/assets/fonts/dejavu-sans-mono-oblique.woff2),
    url(/assets/fonts/dejavu-sans-mono-oblique.woff);
  font-style: italic;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'DejaVu';
  src: url(/assets/fonts/dejavu-sans-mono-bold.woff2),
    url(/assets/fonts/dejavu-sans-mono-bold.woff);
  font-style: normal;
  font-weight: bold;
  font-display: swap;
}

/* -------------------------------------------------------------------------- *
 * Sane Sizing and Appearance
 * -------------------------------------------------------------------------- */

* {
  padding: 0;
  margin: 0;
}

picture {
  display: block;
}

img, .image {
  display: block;
  border: 0;

  /* https://www.zachleat.com/web/fluid-images/ */
  max-width: 100%;
}

img:where([width][height]), .image:where([width][height]) {
  height: auto;
}

img.inline {
  display: inline-block;
  height: 1em;
}

/*img[src$=".svg"] {
  width: 100%;
  height: auto;
  max-width: none;
}*/

iframe {
  border: 0;
}

*::before, *, *::after {
  box-sizing: inherit;
}

:root {
  color-scheme: light dark;
  box-sizing: border-box;

  /* ------------------------------------------------------------------------ *
   * Modular Scale
   * ------------------------------------------------------------------------ */

  --r-minor: 1.2;
  --r-major: 1.5;

  --t05: calc(1em / var(--r-minor));         /*  0.8333  */
  --t10: calc(1em / var(--r-major));         /*  0.66667 */
  --t15: calc(var(--t10) / var(--r-minor));  /*  0.55556 */
  --t20: calc(var(--t10) / var(--r-major));  /*  0.44444 */
  --t30: calc(var(--t20) / var(--r-major));  /*  0.29630 */
  --t40: calc(var(--t30) / var(--r-major));  /*  0.19753 */
  --t50: calc(var(--t40) / var(--r-major));  /*  0.13169 */
  --t60: calc(var(--t50) / var(--r-major));  /*  0.10974 */
  --t70: calc(var(--t60) / var(--r-major));  /*  0.07316 */
  --t80: calc(var(--t70) / var(--r-major));  /*  0.04877 */

  --s05: calc(var(--r-minor) * 1em);         /*  1.2     */
  --s10: calc(var(--r-major) * 1em);         /*  1.5     */
  --s15: calc(var(--r-minor) * var(--s10));  /*  1.8     */
  --s20: calc(var(--r-major) * var(--s10));  /*  2.25    */
  --s30: calc(var(--r-major) * var(--s20));  /*  3.375   */
  --s40: calc(var(--r-major) * var(--s30));  /*  5.0625  */
  --s50: calc(var(--r-major) * var(--s40));  /*  7.59375 */
  --s60: calc(var(--r-major) * var(--s50));  /* 11.39063 */
  --s70: calc(var(--r-major) * var(--s60));  /* 17.08594 */
  --s80: calc(var(--r-major) * var(--s70));  /* 25.62891 */

  --min-margin: 0.5rem;
  --max-measure: 29em;
  /*
   * Bely has low x-height, hence we set a relatively large root font size.
   * If so desired, use factors to scale other fonts. Beware of meh visual
   * results, especially for Bluu Suuperstar.
   */
  --scale-to-reforma: 0.8281;
  --scale-to-bluu: 0.8262;
  --scale-to-dejavu: 0.7385;

  --margin-text-top: 1em;

  /* ------------------------------------------------------------------------ *
   * Colors
   * ------------------------------------------------------------------------ */

  --color-white: #f5f6f8;
  --color-darker: #eaeaec;
  --color-still-darker: #e0e0e2;
  --color-black: #1d1d20;
  --color-cyan: #2bfff4;
  --color-green: #35ff61;
  --color-yellow: #fff143;
  --color-orange: #ffbb55;
  --color-purple: #fdbafd;
  --color-blue: #bbdefb; /* Dark: #395872 */
  --color-dark-separator:#48484e;

  --color-fg: var(--color-black);

  --color-bg: var(--color-white);
  --color-bg-lifted: #fff;
  --color-bg-sunk: #eaeaec;
  --color-separator: #cdced0;

  --color-accent1: var(--color-cyan);
  --color-accent2: var(--color-green);
  --color-selection: var(--color-yellow);
  --color-picture-frame: var(--color-black);
  --color-sb-track: #f3f4f6;
  --color-sb-track-border: rgba(0,0,0,0.1);
  --color-sb-thumb: rgba(0,0,0,0.3);
  --color-sb-thumb-hover: rgba(0,0,0,0.5);
}

/* Dark mode only applies to screen, not paper! */
@media screen and (prefers-color-scheme: dark) {
  :root {
    --color-fg: #e3e7ed;

    --color-separator: var(--color-dark-separator);
    --color-bg-lifted: #38383d;
    --color-bg: #222225;
    --color-bg-sunk: #101012;

    --color-accent1: #753f86;
    --color-accent2: #962d56;
    --color-selection: #851d10;
    --color-picture-frame: var(--color-accent1);
    --color-sb-track: #222225;
    --color-sb-track-border: #38383d;
    --color-sb-thumb: #a0a0a0;
    --color-sb-thumb-hover: #c0c0c0;

     /* Used in cover of "features/ubu-trump" */
    --color-yellow: #f9ec65;
  }

  .cover img, .card img {
    filter: grayscale(0.4);
  }
}

@media print {
  :root {
    --color-fg: #000;
    --color-bg: transparent;
    --color-bg-lifted: transparent;
    --color-bg-sunk: transparent;
  }
}

/* ========================================================================== *
 * Proper Typography
 * ========================================================================== */

:root {
  --system-fontstack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
    'Helvetica Neue', sans-serif;

  /* Bely and Bluu only have Times as understudy. It's bruutal. */
  --bely-fontstack: 'Bely', 'Times New Roman', serif;
  --bely-display-fontstack:
      'Bely Display', 'Abril Fatface', 'Playfair Display', serif;
  --bild-fontstack: 'Bild', system-ui, sans-serif;
  --bluu-fontstack: 'Bluu Suuperstar', 'Times New Roman', serif;
  --dejavu-fontstack: DejaVu, Menlo, Consolas, monospace;
  --reforma-fontstack: 'Reforma 2018', var(--system-fontstack);

  /* Luckily, both Bely and Reforma support kerning, default ligatures, lining
     as well as old-style numerals, and case-sensitive alternates. */
  --font-features-core: 'kern', 'liga', 'case';
  --font-features-text: 'onum', var(--font-features-core);
  --font-features-standout: 'lnum', var(--font-features-core);
  --font-features-bluu: 'ss01', 'ss03', var(--font-features-standout);

  /* ------------------------------------------------------------------------ */

  font-family: var(--bely-fontstack);
  font-size-adjust: none;
  font-synthesis: none;
  font-kerning: auto;

  font-size: 118.75%;
  -ms-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  line-height: var(--r-major);
}

/* calc((var(--max-measure) + 2 * var(--min-margin)) * 118.75%) */
@media (min-width: 35.625em) {
  :root {
    font-size: 131.25%;
  }
}

@media print {
  :root {
    font-size: 100%;
  }
}

li, :not(hgroup, .pullquote) > p {
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

li {
  /* Hanging punctuation at start of first line interferes with marker. */
  hanging-punctuation: last allow-end;
}

p {
  hanging-punctuation: first allow-end last;
}

hgroup p, .pullquote p, p.banner {
  /*
   * On 2022-07-01, content model for hgroup changed, now requiring <p> for
   * subheadings. Since it still uses a 1.5x - 1.8x font size, say, a leading
   * double quote may extend past viewport on phones. Disable for this case.
   * Similarly, don't try this with bannered backgrounds.
   */
  hanging-punctuation: none;
}

/* -------------------------------------------------------------------------- */

body {
  font-variant: oldstyle-nums common-ligatures;
}

/* -------------------------------------------------------------------------- */

abbr,
.byline,
.capped span:first-child,
.roman,
.timeline time,
.unicode-name,
.gallery .hint .text {
  font-variant-caps: all-small-caps;
}

.capped::first-letter {
  font-variant-caps: normal;
}

/* -------------------------------------------------------------------------- */

/* 13<sup>th</sup> if font supports superscript */
sup, sub {
  font-size: 100%;
  vertical-align: baseline;
}

@supports not (font-variant-position: super) {
  sup {
    -webkit-font-feature-settings: 'sups', var(--font-features-text);
    font-feature-settings: 'sups', var(--font-features-text);
  }
}

@supports (font-variant-position: super) {
  sup {
    font-variant-position: super;
  }
}

@supports not (font-variant-position: sub) {
  sub {
    -webkit-font-feature-settings: 'subs', var(--font-features-text);
    font-feature-settings: 'subs', var(--font-features-text);
  }
}

@supports (font-variant-position: sub) {
  sub {
    font-variant-position: sub;
  }
}

/*
 * 13<sup class=ordinal>th</sup> if font supports ordinals,
 * notably English ones. Bely does.
 */
@supports not (font-variant-numeric: ordinal) {
  .ordinal {
    -webkit-font-feature-settings: 'ordn', var(--font-features-text);
    font-feature-settings: 'ordn', var(--font-features-text);
  }
}

@supports (font-variant-numeric: ordinal) {
  .ordinal {
    font-variant-position: normal;
    font-variant-numeric: ordinal;
  }
}

/* -------------------------------------------------------------------------- */

.score {
  font-variant: lining-nums;
}

/* -------------------------------------------------------------------------- */

u {
  text-decoration: none;
  font-variant: lining-nums;
  font-family: var(--dejavu-fontstack);
  font-size: calc(var(--scale-to-dejavu) * 1em);
}

/* -------------------------------------------------------------------------- */

h1, h2, .h2, h3 {
  font-variant: lining-nums common-ligatures;
}

.belyssimo h1, .belyssimo h2, .belyssimo .h2, .belyssimo .pullquote {
  font-family: var(--bely-display-fontstack);
}

.belyssimo h3 {
  font-family: var(--bely-fontstack);
  font-style: italic;
}

.bild h1, .bild h2, .bild .h2, .bild h3, .bild .pullquote {
  font-family: var(--bild-fontstack);
}

.bruutal h1, .bruutal h2, .bruutal .h2, .bruutal h3, .bruutal .pullquote {
  font-family: var(--bluu-fontstack);
  font-weight: 500;
}

@supports not (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal .h2, .bruutal h3, .bruutal .pullquote {
    -webkit-font-feature-settings: var(--font-features-bluu);
    font-feature-settings: var(--font-features-bluu);
  }
}

@supports (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal .h2, .bruutal h3, .bruutal .pullquote {
    font-variant-alternates: styleset(bluu);
  }
}

.reforma h1, .reforma h2, .reforma .h2, .reforma h3,
.reforma .pullquote, .reforma.pullquote {
  font-family: var(--reforma-fontstack);
}

/* ========================================================================== *
 * Keeping Up Appearances
 * ========================================================================== */

abbr[title] {
  border-bottom: none;
  text-decoration: none;
}

body {
  color: var(--color-fg);
  background-color: var(--color-bg);
}

dfn {
  font-style: italic;
}

main {
  display: block;
}

:where(main) :where(header, section, .section, footer) {
  display: grid;
  grid-template-columns:
    [view-start wide-start figure-start]
         var(--min-margin)
    [margin-start wide-with-margin-start text-start narrow-start]
         minmax(0, var(--max-measure))
    [narrow-end text-end wide-with-margin-end margin-end]
         var(--min-margin)
    [figure-end wide-end view-end];
}

/* calc((var(--max-measure) - 2 * var(--s30)) * 131.25% + 118.75%) */
@media (min-width: 30.39em) {
  :where(main) :where(header, section, .section, footer) {
    grid-template-columns:
      [view-start wide-start]
          var(--min-margin)
      [margin-start wide-with-margin-start figure-start text-start]
          minmax(0, 1fr)
      [narrow-start]
          calc(var(--max-measure) - 2 * var(--s30))
      [narrow-end]
          minmax(0, 1fr)
      [text-end figure-end wide-with-margin-end margin-end]
          var(--min-margin)
      [wide-end view-end];
  }
}

/* calc(var(--max-measure) * 131.25% + 118.75%) */
@media (min-width: 39.25em) {
  :where(main) :where(header, section, .section, footer) {
    grid-template-columns:
      [view-start wide-start]
          var(--min-margin)
      [margin-start wide-with-margin-start]
          minmax(0, 1fr)
      [figure-start text-start]
          var(--s30)
      [narrow-start]
          calc(var(--max-measure) - 2 * var(--s30))
      [narrow-end]
          var(--s30)
      [text-end figure-end]
          minmax(0, 1fr)
      [wide-with-margin-end margin-end]
          var(--min-margin)
      [wide-end view-end];
  }
}

/* calc((var(--max-measure) + 2 * var(--s50)) * 131.25% + 118.75%) */
@media (min-width: 59.18em) {
  :where(main) :where(header, section, .section, footer) {
    grid-template-columns:
      [view-start]
          var(--min-margin)
      [margin-start]
          minmax(0, 1fr)
      [wide-start wide-with-margin-start]
          var(--s50)
      [figure-start text-start]
          var(--s30)
      [narrow-start]
          calc(var(--max-measure) - 2 * var(--s30))
      [narrow-end]
          var(--s30)
      [text-end figure-end]
          var(--s50)
      [wide-with-margin-end wide-end]
          minmax(0, 1fr)
      [margin-end]
          var(--min-margin)
      [view-end];
  }
}

:where(main) :where(header, section, .section, footer) > * {
  grid-column: text;
}

.cover > :not(.byline) {
  grid-column: view;
  grid-row: 1;
}

/*
 * Another way of expressing the following rule would be through exclusion,
 * e.g., :not(h1):not(h2):not(hgroup) and so on. In other words, all elements
 * requiring special styling would be listed explicitly. Determining the
 * "better" approach probably boils down to the size of the element selector,
 * i.e., pointing towards exclusion instead of the below.
 */
:where(main)
   :where(blockquote, figure, ol, p, pre, ul, .with-inset)
 + :where(blockquote, figure, ol, p, pre, ul, .with-inset),
main li + li {
  margin-top: var(--margin-text-top);
}

/* Adjust top margin for signature font size. */
main p + .signature {
  margin-top: calc(var(--margin-text-top) / var(--r-minor));
}

/* Outright remove the top margin from .tight list items again. */
main .tight :nth-of-type(n+2) {
  margin-top: 0;
}

::-moz-selection {
  background-color: var(--color-selection);
}

::selection {
  background-color: var(--color-selection);
}

.signature {
  text-align: right;
  font-style: italic;
  font-size: var(--s05);
}

.signature::before {
  content: '—';
}

/* Table Table Table Table Table Table Table Table Table Table Table Table Table */

table {
  border-collapse: separate;
  border-spacing: 0;
  line-height: var(--r-minor);
}

table caption {
  font-size: var(--t05);
  text-align: left;
  font-style: italic;
  padding: var(--t20) 0;
}

table caption > :where(cite, dfn, em, i) {
  font-style: normal;
}

tr > th:first-child {
  text-align: left;
}

th {
  font-weight: normal;
}

thead th {
  font-weight: bold;
}

th, td {
  padding: var(--t40);
}

thead > tr:last-of-type > :where(th, td) {
  padding-bottom: var(--t30);
}

tbody > tr:first-of-type > :where(th, td) {
  border-top: solid var(--t60) var(--color-fg);
  padding-top: var(--t30);
}

td {
  font-variant-numeric: tabular-nums;
  text-align: right;
  margin: 1em;
}

/* ========================================================================== *
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * ========================================================================== */

/* -------------------------------------------------------------------------- *
 * a:not(.stylish)
 * -------------------------------------------------------------------------- */

a {
  /*
   * When it comes to removing the default semi-transparent grey tap overlay
   * on iOS, "transparent" won't do. However, an alpha of 0 will.
   * https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-_webkit_tap_highlight_color
   */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

a:not(.stylish) {
  transition-property: color, -webkit-text-decoration-color, text-decoration-color, background-color, fill;
  transition-duration: 0.1s;
  transition-timing-function: ease-in;
  text-decoration: underline;
}

a:not(.stylish):link, a:not(.stylish):visited {
  color: var(--color-fg);
  fill: currentColor;
  -webkit-text-decoration-color: var(--color-fg);
  text-decoration-color: var(--color-fg);
  background-color: var(--color-bg);
}

a:not(.stylish):focus, a:not(.stylish):hover {
  outline: none;
  color: var(--color-bg);
  fill: currentColor;
  -webkit-text-decoration-color: transparent;
  text-decoration-color: transparent;
  background-color: var(--color-fg);
}

a:not(.stylish):active {
  color: var(--color-fg);
  fill: currentColor;
  background-color: var(--color-fg);
}

a:focus > picture, a:hover > picture {
  outline: solid var(--t20) var(--color-picture-frame);
}

@media (forced-colors: active) {
  a:not(.stylish):link, a:not(.stylish):visited {
    color: LinkText;
    background-color: Canvas;
  }

  a:not(.stylish):focus, a:not(.stylish):hover {
    forced-color-adjust: none;
    color: Canvas;
    background-color: LinkText;
  }

  .card > .description {
    background-color: Canvas;
  }
}

/* -------------------------------------------------------------------------- *
 * .about-this-page
 * -------------------------------------------------------------------------- */

.about-this-page {
  font-style: italic;
}

.about-this-page :where(cite, dfn, em, i) {
  font-style: normal;
}

 /* -------------------------------------------------------------------------- *
 * .as-paragraph (flow <p> and <li> into one paragraph with Oxford comma)
 * -------------------------------------------------------------------------- */

.as-paragraph {
  hanging-punctuation: first allow-end last;
}

.as-paragraph p, .as-paragraph ul, .as-paragraph li {
  display: inline;
  list-style: none;
  margin: 0;
  padding: 0;
}

.conjunctive li::after {
  content: ',';
}

.conjunctive li:nth-last-child(2)::after {
  content: ', and ';
}

.conjunctive li:last-child::after {
  content: '.';
}

/* -------------------------------------------------------------------------- *
 * b
 * -------------------------------------------------------------------------- */

b {
  font-weight: bold;
}

/* -------------------------------------------------------------------------- *
 * .banner: the art of making banners out of text
 * -------------------------------------------------------------------------- */

/*
 * April 2024: Banners finally, finally appear to work across Chorme, Firefox,
 * and Safari.
 *
 * We need an inline element inside a block element. The block element controls
 * spacing, including line-height and margins, whereas the inline element
 * provides the colorful background:
 *
 *   padding-inline: <length>;      -- extend banner to past text
 *   box-decoration-break: clone;   -- repeat background & padding each line
 *   background-attachment: fixed;  -- make background consistent across lines
 *   background-size: 100%;         -- make background take up entire width
 *
 * To control line-breaking behavior, use spans within span, with inner spans
 * denoting fragments that must not line-break.
 */

.pullquote .banner {
  line-height: calc(var(--r-major) * var(--r-minor));
  text-align: center;
  margin-left: var(--t30);
  margin-right: var(--t30);
}

.banner > span, .banner > strong {
  padding-bottom: var(--t50);
  padding-inline: var(--t40);
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
  background-attachment: fixed;
  background-size: 100%;
}

.banner > span > span, .banner > strong > span {
  display: inline-block;
}

/* •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••• */

/*
 * https://davidjohnstone.net/lch-lab-colour-gradient-picker
 * https://oklch.com/
 * https://colors-gen.vercel.app/
 */
 .mostly-orange > span, .mostly-orange > strong {
  background-color: #ffd3c2;
  background-image: linear-gradient(to right in oklch,
    oklch(0.9 0.15 10),
    oklch(0.9 0.15 18),
    oklch(0.9 0.15 26),
    oklch(0.9 0.15 34),
    oklch(0.9 0.15 42),
    oklch(0.9 0.15 50),
    oklch(0.9 0.15 60),
    oklch(0.9 0.15 74),
    oklch(0.9 0.15 82)
  );
}

.mostly-green > span, .mostly-green > strong {
  background-color: #86fbb0;
  background-image: linear-gradient(to right in oklch,
    oklch(0.9 0.15 128),
    oklch(0.9 0.15 132),
    oklch(0.9 0.15 142),
    oklch(0.9 0.15 154),
    oklch(0.9 0.15 166),
    oklch(0.9 0.15 176),
    oklch(0.9 0.15 186),
    oklch(0.9 0.15 196)
  );
}

.mostly-blue > span, .mostly-blue > strong {
  background-color: #c9e0ff;
  background-image: linear-gradient(to right in oklch,
    oklch(0.9 0.15 228),
    oklch(0.9 0.15 244),
    oklch(0.9 0.15 256),
    oklch(0.9 0.15 264),
    oklch(0.9 0.15 272),
    oklch(0.9 0.15 278),
    oklch(0.9 0.15 286),
    oklch(0.9 0.15 296)
  );
}

.blue-purple > span, .blue-purple > strong {
  background-color: #a9beff;
  background-image: linear-gradient(to right,
    #70d0ee,
    #78cdf5,
    #83cafb,
    #8fc6ff,
    #9dc2ff,
    #a9beff,
    #b4baff,
    #c0b6fe,
    #cbb2f8,
    #d5aff2,
    #deace9
  );
  background-image: linear-gradient(to right in oklch,
    oklch(81% 0.1 220),
    oklch(81% 0.1 230),
    oklch(81% 0.1 240),
    oklch(81% 0.1 250),
    oklch(81% 0.1 260),
    oklch(81% 0.1 270),
    oklch(81% 0.1 280),
    oklch(81% 0.1 290),
    oklch(81% 0.1 300),
    oklch(81% 0.1 310),
    oklch(81% 0.1 320)
  );
}

@media screen and (prefers-color-scheme: dark) {
  .blue-purple > span, .blue-purple > strong {
    background-color: #4d5f9c;
    background-image: linear-gradient(to right,
      #006f87,
      #006d91,
      #1f6a96,
      #32669a,
      #40639c,
      #4d5f9c,
      #595c9b,
      #635898,
      #6c5594,
      #75528e,
      #7c4f86
    );
    background-image: linear-gradient(to right in oklch,
      oklch(50% 0.1 220),
      oklch(50% 0.1 230),
      oklch(50% 0.1 240),
      oklch(50% 0.1 250),
      oklch(50% 0.1 260),
      oklch(50% 0.1 270),
      oklch(50% 0.1 280),
      oklch(50% 0.1 290),
      oklch(50% 0.1 300),
      oklch(50% 0.1 310),
      oklch(50% 0.1 320)
    );
  }
}

/* •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••• */

.yellow-green > span, .yellow-green > strong {
  background-color: #ffe47d;
  background-image: linear-gradient(to right,
    #ffe47d,
    #f4ea68,
    #e2f074,
    #cef682,
    #b9fb93,
    #a2ffa5,
    #9dffb2
  );
  background-image: linear-gradient(to right in oklch,
    oklch(92% 0.15 95),
    oklch(92% 0.15 105),
    oklch(92% 0.15 115),
    oklch(92% 0.15 125),
    oklch(92% 0.15 135),
    oklch(92% 0.15 145),
    oklch(92% 0.15 150)
  );
}

@media screen and (prefers-color-scheme: dark) {
  .yellow-green > span, .yellow-green > strong {
    background-color: #626a09;
    background-image: linear-gradient(to right,
      #865900,
      #7e5e00,
      #766200,
      #6d6600,
      #626a09,
      #556e1c,
      #46712b,
      #357339,
    );
    background-image: linear-gradient(to right in oklch,
      oklch(50% 0.11 75),
      oklch(50% 0.11 85),
      oklch(50% 0.11 95),
      oklch(50% 0.11 105),
      oklch(50% 0.11 115),
      oklch(50% 0.11 125),
      oklch(50% 0.11 135),
      oklch(50% 0.11 145)
    );
  }
}

/* •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••• */

.purple-orange > span, .purple-orange > strong {
  background-color: #ffabb7;
  background-image: linear-gradient(to right,
    #ddb0ff,
    #e8acf6,
    #f2a9eb,
    #faa7de,
    #ffa6d0,
    #ffa9c3,
    #ffabb7,
    #ffacab,
    #ffaea0,
    #ffaf94,
    #ffb185,
    #ffb373,
    #f8b86a
  );
  background-image: linear-gradient(to right in oklch,
    oklch(82.5% 0.12 310),
    oklch(82.5% 0.12 320),
    oklch(82.5% 0.12 330),
    oklch(82.5% 0.12 340),
    oklch(82.5% 0.12 350),
    oklch(82.5% 0.12 0),
    oklch(82.5% 0.12 10),
    oklch(82.5% 0.12 20),
    oklch(82.5% 0.12 30),
    oklch(82.5% 0.12 40),
    oklch(82.5% 0.12 50),
    oklch(82.5% 0.12 60),
    oklch(82.5% 0.12 70),
    oklch(82.5% 0.12 80)
  );
}

@media screen and (prefers-color-scheme: dark) {
  .purple-orange > span, .purple-orange > strong {
    background-color: #94436d;
    background-image: linear-gradient(to right,
      #6e519d,
      #784d96,
      #814a8d,
      #884783,
      #8f4478,
      #94436d,
      #984260,
      #9b4153,
      #9c4246,
      #9c4438
    );
    background-image: linear-gradient(to right in oklch,
      oklch(50% 0.12 310),
      oklch(50% 0.12 320),
      oklch(50% 0.12 330),
      oklch(50% 0.12 340),
      oklch(50% 0.12 350),
      oklch(50% 0.12 0),
      oklch(50% 0.12 10),
      oklch(50% 0.12 20),
      oklch(50% 0.12 30)
    );
  }
}

.cyan-green {
  background-image: linear-gradient(to right, var(--color-cyan), var(--color-green));
}

/* -------------------------------------------------------------------------- *
 * .byline
 * -------------------------------------------------------------------------- */

.byline {
  display: flex;
  justify-content: space-between;
  margin-top: var(--s10);
  margin-bottom: var(--s10);
}

address {
  font-style: normal;
}

/* -------------------------------------------------------------------------- *
 * .capped, .drop-count, .drop-heading
 * -------------------------------------------------------------------------- */

/*
 * With some release before and including 16.5.2, Safari's implementation of
 * -webkit-initial-letter ceased to work with list numbers injected via ::before
 * content. So for now, all browsers use simulated drop caps. Boo!
 */

.drop-count {
  list-style: none;
}

.drop-heading {
  counter-reset: list-item;
}

/* See .invisible */

.drop-heading h3 + p {
  margin-top: var(--margin-text-top);
  counter-increment: list-item;
}

.drop-count li::before, .drop-heading h3 + p::before {
  content: counter(list-item);
  font-variant: lining-nums;
}

/*@supports (not (initial-letter: 2)) and (not (-webkit-initial-letter: 2)) {*/
.capped::first-letter, .drop-count li::before, .drop-heading h3 + p::before {
  float: left;
  font-size: 3.3em;
  padding-right: 0.06em;
  line-height: 0.8;
}

/* ---------- Chrome ---------- */
.capped::first-letter {
  margin-top: 0.006em;
}

.drop-count li::before, .drop-heading h3 + p::before {
  margin-top: 0.008em;
}


/* ---------- Firefox ---------- */
@supports (not (initial-letter: 2)) and
          (not (-webkit-initial-letter: 2)) and
          (-moz-appearance: none) {
  .capped::first-letter {
    margin-top: 0.15em;
  }

  .drop-count li::before, .drop-heading h3 + p::before {
    margin-top: 0.016em;
  }
}

/* ---------- Safari ---------- */
/*
@supports (initial-letter: 2) or (-webkit-initial-letter: 2) {
  .capped::first-letter, .drop-count li, .drop-heading h3 + p {
    -webkit-initial-letter: 2;
    initial-letter: 2;
  }
}*/

/* -------------------------------------------------------------------------- *
 * .card, .carddeck
 * -------------------------------------------------------------------------- */

/*
 * The non-breaking space in "<h3><a>&nbsp;<span>..." is strictly necessary.
 * Otherwise, Safari treats <a> as empty, doesn’t activate the link, and skips
 * it during keyboard navigation. The non-breaking space is enough of a
 * character to convince Safari of link-worthiness. But it also is easy enough
 * to hide.
 */

/* >>>>>>>>>> The Layout is Flex, but right-aligned and wrapping. <<<<<<<<<< */

main .carddeck {
  grid-column: view;
  margin-top: var(--s20);
  padding-left: 0;
  list-style: none;
}

.card {
  /* Width of iPhone 8 Plus, i.e., 414px. Google Pixel 3 is 411px. */
  max-width: 21.8em;
  position: relative;
  width: 100%;
  margin: var(--s20) auto 0 auto;
}

@media (min-width: 35.625em) {
  .card {
    /* Font size changed already. Switch to sizing via modular scale. */
    max-width: calc(var(--r-minor) * var(--s70)); /* CardMax */
  }
}

/*
 * Break iff: x/2 - MaxMeasure/2 = x - 2 CardMax - 2 S[10]
 *     2 CardMax + 2 S[10] - MaxMeasure/2 = x - x/2
 *     x = 4 CardMax + 4 S[10] - MaxMeasure
 *     x = 4 * 1.2 * 17.0859 + 4 * 1.5 - 29   [em]
 *     x = 82.01232 + 6 - 29   [em]
 *     x = 59.01232   [em]
 *     x = 77.45367 browser root em
 *
 * Setting the padding on the right does not work here because of the
 * vertical scroll bar. Thankfully, setting the width is all that's
 * required, since the box model keeps the box left-aligned by default.
 */
@media (min-width: 77.45em) {
  main .carddeck {
    grid-column: view-start/text-end;
    display: flex;
    flex-wrap: wrap;
    /* Safari and Chrome pretend to accept end, but don't act on it. */
    justify-content: flex-end;
  }

  .card {
    margin: var(--s10) 0 0 var(--s10);
  }
}

/* >>>>>>>>>> The link & hover effect cover entire card. <<<<<<<<<< */

.card > h3 {
  font-family: var(--bely-fontstack);
  /* Make non-breaking space invisible again. See above. */
  font-size: 0;
  margin: 0;
}

.card > h3 > a, .card > h3 > a::before {
  position: absolute;
  inset: 0;
}

/* >>>>>>>>>> The hover effect is opacity only. <<<<<<<<<< */

.card > h3 > a {
  text-decoration: none;
  z-index: 665;
}

.card > h3 > a:focus,
.card > h3 > a:hover {
  outline: none;
}

.card > h3 > a::before {
  content: '';
  font-size: calc(var(--r-minor) * 1rem);
  border: solid var(--t10) var(--color-green);
  opacity: 0;
}

@media screen and (prefers-color-scheme: dark) {
  .card > h3 > a::before {
    border: solid var(--t10) var(--color-accent1);
  }
}

.card > h3 > a:focus::before,
.card > h3 > a:hover::before {
  opacity: 1;
}

/* >>>>>>>>>> The nested headline is presented on top of image. <<<<<<<<<< */

.card > h3 span {
  font-size: calc(var(--r-minor) * 1rem);
  position: absolute;
  top: var(--t15);
  left: var(--t15);
  padding: var(--t50);
  /* Force link color. */
  color: var(--color-fg);
  background-color: var(--color-bg-lifted);
}

@media (forced-colors: active) {
  .card > h3 span {
    background-color: Canvas;
  }
}

@media print {
  .card > h3 span {
    background-color: #fff;
  }
}

/* >>>>>>>>>> Image aspect ratio is normalized to modular rhythm. <<<<<<<<<< */

.card > .image {
  position: relative;
  padding-top: calc(100% / var(--r-major));
  height: 0;
  width: 100%;
  overflow: hidden;
}

@media screen and (prefers-color-scheme: light) {
  .card > .image img, .card > .image iframe {
    filter: grayscale(0.3);
  }
}

/*
 * When absolutely positioning images on an aspect ratio frame,
 * the how matters. object-fit and object-position will not work
 * if top/right/bottom/left was used. Thankfully, top/left/width/height
 * do work.
 */
.card > .image img, .card > .image svg, .card > .image iframe {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

/* >>>>>>>>>> There even is a space for a tagline below the image. <<<<<<<<<< */

.card > .description {
  padding: var(--t05);
  background-color: var(--color-bg-lifted);
  text-align: right;
  line-height: 1;
}

@media (forced-colors: active) {
  .card > .description {
    background-color: Canvas;
  }
}

/* -------------------------------------------------------------------------- *
 * code, pre, samp, var
 * -------------------------------------------------------------------------- */

code, samp {
  font-family: var(--dejavu-fontstack);
  font-size: calc(var(--scale-to-dejavu) * 1em);
}

pre {
  background-color: var(--color-bg-sunk);
  padding: var(--t20);
  white-space: pre-wrap;
  overflow-wrap: break-word;
  font-family: var(--bely-fontstack);
  line-height: var(--r-minor);

  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;

  -ms-hyphens: none;
  -webkit-hyphens: none;
  hyphens: none;
}

var.env {
  font-family: var(--dejavu-fontstack);
  font-size: calc(var(--scale-to-dejavu) * 1em);
  font-style: normal;
  font-variant-caps: all-small-caps;
}

/* -------------------------------------------------------------------------- *
 * .cover
 * -------------------------------------------------------------------------- */

.cover img, .cover .hero {
  width: 100vw;
   /* The dynamic version */
  height: 100svh;
}

/*@supports (-webkit-touch-callout: none) {
  .cover img, .cover .hero {
    height: -webkit-fill-available;
  }
}*/

.cover img {
  -o-object-fit: cover;
  object-fit: cover;
}

.cover .title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  line-height: var(--r-minor);
  /*
   * Without the z-index, the title vanishes when enabling dark mode. While
   * certainly surprising, this is the direct result of CSS rules for creating
   * stacking contexts. Notably, the subsequent hero image has a (grey) filter
   * in dark mode. That also creates a new stacking context for the image.
   * Without the title having a z-index, it does not create a stacking context
   * and thus looses out to the image's stacking context. With the z-index, the
   * title not only has its own stacking context but also is closer to the
   * viewer. Arguably, a z-index of 1 would suffice.
   */
  z-index: 665;

  /* Make sure navigation gets pointer events even on small screens. */
  pointer-events: none;
}

.cover h1 {
  padding: 0;
  margin: 0;
}

/* -------------------------------------------------------------------------- *
 * .figure, figcaption
 * -------------------------------------------------------------------------- */

main :where(.figure, .figure-with-margin,
            .narrow-figure,
            .wide-figure, .wide-figure-with-margin)
     img {
  margin-left: auto;
  margin-right: auto;
}

main .figure {
  grid-column: figure;
}

main .figure-with-margin {
  grid-column: text;
}

main .narrow-figure {
  grid-column: narrow;
}

main .wide-figure {
  grid-column: wide;
}

main .wide-figure-with-margin {
  grid-column: wide-with-margin;
}

:not(.textual) > figcaption::before {
  content: '—';
}

:not(.textual) > figcaption {
  font-size: var(--t05);
  text-align: right;
  font-style: italic;
  padding-top: 0.4em;
}

:not(.textual) > figcaption :where(cite, dfn, em, i) {
  font-style: normal;
}

@supports (-moz-appearance: none) {
  /* Firefox is more precise than Chrome/Safari, needs different constant. */
  :not(.textual) > figcaption {
    padding-top: 0.25em;
  }
}

.figure figcaption, .wide-figure figcaption {
  margin-right: var(--min-margin);
  margin-left: var(--min-margin);
}

@media (min-width: 39.375em) {
  .figure figcaption {
    margin-right: 0;
    margin-left: 0;
  }
}

@media (min-width: 59.18em) {
  .wide-figure figcaption {
    margin-right: 0;
    margin-left: 0;
  }
}

/*

A textual figure needn't be a thesis,
it could be corollary, it could be something else

main {
  counter-reset: thesis
}

figure.textual > * {
  display: inline;
}

figure.textual figcaption {
  font-weight: bold;
}

figure.textual figcaption::after {
  content: ' #' counter(thesis) ': ';
  counter-increment: thesis;
}*/

/* -------------------------------------------------------------------------- *
 * .gallery
 * -------------------------------------------------------------------------- */

.sprites {
  display: none;
}

main .gallery {
  grid-column: wide;
}

.gallery {
  position: relative;
}

.gallery .images {
  display: flex;
  overflow-x: scroll;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  list-style: none;
}

.gallery .images li {
  margin-top: 0;
  flex: 0 0 100%;
  scroll-snap-align: center;
}

.gallery figcaption::before {
  content: '';
}

.gallery figcaption {
  font-size: 1em;
  padding: 1em 0;
  text-align: center;
  background-color: var(--color-bg-lifted);
}

.gallery .images:focus {
  outline: solid var(--t20) var(--color-fg);
}

.gallery .images:focus:not(:focus-visible) {
  outline: none;
}

.gallery .hint {
  margin: var(--t20) 0;
  font-size: 1em;
  text-align: center;
}

@media (min-width: 35.625em) {
  .gallery .hint {
    font-size: var(--t05);
  }
}

.gallery .hint .arrow {
  -webkit-font-feature-settings: 'ss02';
  font-feature-settings: 'ss02';
  vertical-align: -7%;
}

.gallery .images {
  scrollbar-width: thin;
  scrollbar-color: var(--color-sb-thumb) var(--color-sb-track);
}

.gallery .images::-webkit-scrollbar {
  height: var(--t20);
}

.gallery .images::-webkit-scrollbar-track {
  background-color: var(--color-sb-track);
  border: solid 0.03em var(--color-sb-track-border);
}

.gallery .images::-webkit-scrollbar-thumb {
  background-color: var(--color-sb-thumb);
  border-radius: 100px;
}

.gallery .images::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-sb-thumb-hover);
}

@media (forced-colors: active) {
  .gallery .images::-webkit-scrollbar-track {
    forced-color-adjust: none;
    background-color: Canvas;
    border: solid 0.03em GrayText;
  }

  .gallery .images::-webkit-scrollbar-thumb {
    background-color: GrayText;
  }

  .gallery .images::-webkit-scrollbar-thumb:hover {
    background-color: CanvasText;
  }
}

@media print {
  .gallery .images {
    display: block;
    overflow-x: unset;
    margin-top: var(--s15);
  }

  .gallery .images:focus {
    outline: 0;
  }

  .gallery .images li {
    margin-top: var(--margin-text-top);
  }

  .gallery figcaption {
    padding: var(--t15) 0 var(--s10)
  }

  .gallery .hint {
    display: none;
  }
}

/* -------------------------------------------------------------------------- *
 * h1, h2, and h3
 * -------------------------------------------------------------------------- */

h1, h2, .h2, h3 {
  font-style: normal;
  font-weight: normal;
  line-height: var(--r-minor);
}

h1 {
  font-size: var(--s20);
  margin-top: 1rem;
  margin-bottom: calc(var(--r-major) * 1rem);
}

h2, .h2 {
  font-size: var(--s10);
  margin-top: calc(var(--r-major) * var(--r-minor) * 1rem);
  margin-bottom: calc(var(--r-minor) * 1rem);
}

h3 {
  font-size: var(--s05);
  margin-top: var(--s05);
  margin-bottom: 1rem;
}

h1 + h2, h1 + .h2 {
  margin-top: calc(var(--t10) * -1);
}

.bild h2, .bild .h2 {
  font-size: var(--s15);
  font-stretch: 95%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

.bild h3 {
  font-size: var(--s10);
  font-style: normal;
  font-stretch: 100%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

@supports (-moz-appearance: none) {
  .bild h2, .bild .h2 {
    font-size: calc(var(--r-minor) * var(--s15));
  }

  .bild h3 {
    font-size: calc(var(--r-minor) * var(--s10));
  }
}

.numbered-outline {
  counter-reset: h2;
}

.numbered-outline > section {
  counter-reset: h3;
}

.numbered-outline > section:not(.nocount) > h2::before {
  content: counter(h2) ".\2002";
  counter-increment: h2;
}

.numbered-outline > section.appendix {
  counter-reset: h2;
}

.numbered-outline > section.appendix > h2::before,
.numbered-outline > section.appendix ~ section > h2::before {
  content: counter(h2, upper-latin) ".\2002";
}

.numbered-outline > section:not(.nocount) > h3:not(.nocount)::before {
  content: counter(h2) "." counter(h3) "\2002";
  counter-increment: h3;
}

/* -------------------------------------------------------------------------- *
 * [hidden], .invisible
 * -------------------------------------------------------------------------- */

[hidden] {
  display: none;
}

/*
 * See https://zellwk.com/blog/hide-content-accessibly/ and
 * https://github.com/h5bp/main.css/issues/12
 */
.invisible, .drop-heading > h3 {
  white-space: nowrap;
  height: auto;
  width: 1px;
  border: 0;
  padding: 0;
  margin: 0;
  clip-path: inset(50%);
  clip: rect(0 0 0 0);
  position: absolute;
  overflow: hidden;
}

/* -------------------------------------------------------------------------- *
 * hr
 * -------------------------------------------------------------------------- */

hr {
  color: var(--color-fg);
  border: 0;
  text-align: center;
  margin: var(--s10) 0;
}

hr::after {
  display: inline-block;
  font-style: normal;
  font-size: var(--t05);
  content: '⁂';
}

hr.lively {
  margin-bottom: var(--s10);

  --sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);
  --amp: calc(var(--s10) / 4);
  --rot: 10deg;

  transform: translateY(0.75em);
  animation: 10s var(--sine) infinite up-down;
}

hr.lively::after {
  transform: rotate(calc(-1 * var(--rot)));
  animation: 10s var(--sine) -6.25s infinite back-forth;
}

/* And action! */
@keyframes up-down { 50% { transform: translateY(calc(-1 * var(--amp))); } }
@keyframes back-forth { 50% { transform: rotate(var(--rot)); } }

/* Respect the user's wishes! */
@media (prefers-reduced-motion: reduce) {
  hr, hr::after {
    animation: none;
    transform: none;
  }
}

/* -------------------------------------------------------------------------- *
 * i
 * -------------------------------------------------------------------------- */

/* Using italics for Adonai looks awkward. Besides, They surpass all emphasis. */
i[lang=he] {
  font-style: normal
}

/* -------------------------------------------------------------------------- *
 * .with-inset, .inset-left, .inset-right
 *
 * A div.with-inset wraps the figure.inset-left or figure.inset-right and enough
 * subsequent paragraphs to cover the height of the figure. The div is necessary
 * because grid cells can't float.
 * -------------------------------------------------------------------------- */

.with-inset > p:first-of-type {
  margin-top: 0;
}

/* The surrounding <div class=with-inset> also contains the floats. */
.with-inset::after {
  content: '';
  clear: both;
}

/*
 * For this class to work, <header>, <section>, and <footer> elements
 * containing such an inset-image must have their max-width and margin
 * set by the container.
 */

.inset-right, .inset-left {
  margin-top: var(--t30);
  width: calc(7 * var(--s10));
}
.inset-right { margin-left: var(--min-margin);  float: right; }
.inset-left  { margin-right: var(--min-margin); float: left; }

/* As viewport gets bigger, inset images gradually slide out of the text. */

/* calc((var(--max-measure) + 2 * 1em * 131.25%) */
@media (min-width: 40.6875em) {
  .inset-right {
    margin-right: calc((-100vw + var(--max-measure) + 3em) / 2);
  }
  .inset-left {
    margin-left: calc((-100vw + var(--max-measure) + 2em) / 2);
  }
}

/* calc((var(--max-measure) + 2 * 10.5em + 4 * 1em) * 131.25%) */
@media (min-width: 70.875em) {
  .inset-right {
    /* Not strictly necessary but eliminates weird dev tools appearance. */
    margin-left: 0;
    /* Consider reducing to -7 * s10 - 1em, requires change to .byline. */
    margin-right: calc(-7 * var(--s10) - 1em);
  }
  .inset-left {
    margin-right: 0;
    margin-left: calc(-7 * var(--s10) - 1em);
  }
}

/* -------------------------------------------------------------------------- *
 * ol, ul
 * -------------------------------------------------------------------------- */

main ul {
  padding-left: var(--s10);
}

.counted {
  padding-left: var(--s20);
}

.counted ::marker {
  content: counter(list-item) '.\2002';
  font-variant: lining-nums;
}

/* Safari */
.counted :where(.appendix, .appendix ~ *) {
  list-style-type: upper-latin;
}

/* Firefox and Chrome */
.counted :where(.appendix, .appendix ~ *)::marker {
  content: counter(list-item, upper-latin) '.\2002';
}

.references .counted ::marker {
  padding-left: var(--s20);
  content: '[' counter(list-item) '] ';
}

.references .counted li {
  overflow-wrap: break-word;
}

/* -------------------------------------------------------------------------- *
 * .page-footer
 * -------------------------------------------------------------------------- */

.page-footer {
  margin: var(--s30) 0 0 0;
  padding: var(--margin-text-top) var(--min-margin);
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  color: var(--color-fg);
  background-color: var(--color-bg-sunk);
  --color-bg: var(--color-bg-sunk);
}

.in-here, .out-there {
  width: 50%;
  line-height: calc(var(--r-major) * var(--r-major));
}

@media (pointer: fine) {
  .in-here, .out-there {
    font-size: var(--t05);
    line-height: var(--r-major);
  }
}

.page-footer h2 {
  font-size: var(--s05);
  font-stretch: 100%; /* Otherwise, Bild becomes too hard to read. */
  margin: var(--t40) 0 var(--t20) 0;
}

.bild .page-footer h2 {
  font-size: var(--s10);
}

.reforma .page-footer h2 {
  font-size: calc(var(--scale-to-reforma) * var(--s05));
}

.page-footer ul {
  list-style: none;
  margin: 0 0 var(--t40) 0;
}

.in-here {
  padding-right: var(--t20);
  border-right: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: right;
}

.out-there {
  padding-left: var(--t20);
  border-left: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: left;
}

.copyright {
  margin-top: var(--margin-text-top);
  font-size: var(--t05);
}

/* Make the page footer sticky on short pages, i.e., error pages. */

html {
  height: 100%;
}

body {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

/*
 * Firefox hates flexbox when it comes to printing,
 * only printing the first page. Nuts!
 */
@media print {
  @supports (-moz-appearance: none) {
    body {
      display: block;
    }
  }
}

/* -------------------------------------------------------------------------- *
 * .page-header
 * -------------------------------------------------------------------------- */

.page-header {
  width: 100%;
  background-color: var(--color-bg-sunk);
  --color-bg: var(--color-bg-sunk);
}

.page-header > ul {
  display: flex;
  list-style: none;
}

.page-header:not(.cornered) > ul {
  max-width: calc(var(--max-measure) + 2 * var(--min-margin));
  margin: 0 auto;
}

/*
 * When using a supports query for the actual padding, Chrome 76 and Firefox 68
 * did apply the padding despite not yet supporting the max() function. With
 * this two-clause query, they do not apply the padding—as they should.
 */
@supports (padding: max(1em)) and (padding: env(safe-area-inset-left)) {
  .page-header > ul {
    padding:
      0 max(env(safe-area-inset-left), 0)
      0 max(env(safe-area-inset-right), 0);
  }
}

.page-header a {
  display: inline-block;
  padding: var(--min-margin);
  text-decoration: none;
}

.page-header li:first-of-type a {
  line-height: 0;
}

.page-header svg {
  height: var(--s10);
  width: var(--s10);
}

.page-header li:nth-of-type(2) {
  font-size: var(--s05);
  line-height: var(--r-minor);
  margin-left: auto;
}

/*
 * Leave a large space between navigation bar and main content.
 * For .page-header.cornered, .byline declares the logical equivalent.
 */
.page-header:not(.cornered) + main {
  margin-top: calc(var(--s30) - var(--margin-text-top));
}

.page-header.cornered {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 665;
  background-color: initial;
  padding: 2vmin;
}

@supports (left: max(1em)) and (left: env(safe-area-inset-left)) {
  .page-header.cornered {
    padding:
      2vmin max(env(safe-area-inset-right), 2vmin)
      2vmin max(env(safe-area-inset-left), 2vmin);
  }
}

/* -------------------------------------------------------------------------- *
 * .pullquote
 * -------------------------------------------------------------------------- */

.pullquote {
  grid-column: wide-with-margin;
  margin: var(--s05) 0 var(--s10) 0;
}

.pullquote p {
  font-size: var(--s20);
  font-weight: normal;
  line-height: var(--r-minor);
  text-align: center;
  text-wrap: balance;
}

.bild .pullquote p {
  font-stretch: 85%;
}

.reforma .pullquote p, .reforma.pullquote p {
  font-size: calc(var(--scale-to-reforma) * var(--s20));
}

/* -------------------------------------------------------------------------- *
 * .quote
 * -------------------------------------------------------------------------- */

blockquote {
  margin-left: 1em;
  margin-right: 1em;
}

@media (min-width: 39.375em) {
  blockquote {
    margin-left: var(--s10);
    margin-right: var(--s10);
  }
}

blockquote > :first-child::before, blockquote > :last-child::after {
  font-size: var(--s05);
  line-height: 0;
  position: relative;
}

/*
 * U+275d and U+275e are heavy double turned comma quotes.
 * U+200a is a hair space.
 */
blockquote > :first-child::before { content: '\275d'; padding-right: 0.024em; }
blockquote > :last-child::after   { content: '\275e'; padding-left:  0.024em; }

/* -------------------------------------------------------------------------- *
 * .sidebar
 * -------------------------------------------------------------------------- */

 main .sidebar {
  background-color: var(--color-bg-sunk);
  grid-column: figure;
  padding: var(--min-margin);
  margin-top: var(--s10);
}

main h2 + .sidebar, main .h2 + .sidebar {
  margin-top: 0;
}

main .sidebar > :first-child {
  margin-top: 0;
}

main .sidebar a {
  --color-bg: var(--color-bg-sunk);
}

main .sidebar + p {
  margin-top: var(--s10);
}

/* -------------------------------------------------------------------------- *
 * .strike
 *
 * A somewhat lower positioned, somewhat longer line-through effect
 * that just looks better!
 * -------------------------------------------------------------------------- */

.strike {
  text-decoration-line: none;
  position: relative;
}

.strike::after {
  content: '';
  position: absolute;
  left: -5%;
  width: 110%;
  height: var(--t60);
  top: 60%;
  background-color: var(--color-fg);
}

/* -------------------------------------------------------------------------- *
 * .timeline
 * -------------------------------------------------------------------------- */

.timeline h2 {
  margin-top: var(--s10);
  margin-bottom: var(--margin-text-top);
}

.timeline, .timeline ol {
  list-style: none;
}

.timeline li + li {
  margin-top: var(--s05);
}

.timeline .title {
  font-size: var(--s05);
}

.timeline .title::after, .timeline time:first-of-type::before {
  content: '\a';
  white-space: pre-line;
}

 /* -------------------------------------------------------------------------- *
 * PrismJS token
 *
 * Based on "Visual Studio" theme for light mode
 * (https://github.com/PrismJS/prism-themes/blob/master/themes/prism-vs.css)
 *
 * Based on "Tomorrow Night" theme for dark mode
 * (https://github.com/PrismJS/prism/blob/master/themes/prism-tomorrow.css)
 * -------------------------------------------------------------------------- */

.token.prism-comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #008000;
  font-style: italic;
}

.token.namespace {
  opacity: .7;
}

.token.string {
  color: #A31515;
}

.token.punctuation,
.token.operator {
  color: #393A34; /* no highlight */
}

.token.url,
.token.symbol,
.token.number,
.token.boolean,
.token.variable,
.token.constant,
.token.inserted {
  color: #36acaa;
}

.token.atrule,
.token.keyword,
.token.attr-value,
.language-autohotkey .token.selector,
.language-json .token.boolean,
.language-json .token.number,
code[class*="language-css"] {
  color: #0000ff;
}

.token.function {
  color: #393A34;
}

.token.deleted,
.language-autohotkey .token.tag {
  color: #9a050f;
}

.token.selector,
.language-autohotkey .token.keyword {
  color: #00009f;
}

.token.important {
  color: #e90;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.class-name,
.language-json .token.property {
  color: #2B91AF;
}

.token.tag,
.token.selector {
  color: #800000;
}

.token.attr-name,
.token.property,
.token.regex,
.token.entity {
  color: #ff0000;
}

.token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

@media screen and (prefers-color-scheme: dark) {
  .token.prism-comment,
  .token.block-comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: #999;
  }

  .token.punctuation {
    color: #ccc;
  }

  .token.tag,
  .token.attr-name,
  .token.namespace,
  .token.deleted {
    color: #e2777a;
  }

  .token.function-name {
    color: #6196cc;
  }

  .token.boolean,
  .token.number,
  .token.function {
    color: #f08d49;
  }

  .token.property,
  .token.class-name,
  .token.constant,
  .token.symbol {
    color: #f8c555;
  }

  .token.selector,
  .token.important,
  .token.atrule,
  .token.keyword,
  .token.builtin {
    color: #cc99cd;
  }

  .token.string,
  .token.char,
  .token.attr-value,
  .token.regex,
  .token.variable {
    color: #7ec699;
  }

  .token.operator,
  .token.entity,
  .token.url {
    color: #67cdcc;
  }

  .token.important,
  .token.bold {
    font-weight: bold;
  }
  .token.italic {
    font-style: italic;
  }

  .token.entity {
    cursor: help;
  }

  .token.inserted {
    color: green;
  }
}

 /* -------------------------------------------------------------------------- *
 * @media print
 * -------------------------------------------------------------------------- */

footer.references {
  display: none;
}

@media print {
  @page {
    margin: 1cm;
  }

  .page-header, .page-footer {
    display: none;
  }

  .page-header:not(.cornered) + main {
    margin-top: 0;
  }

  main {
    margin-bottom: var(--s20);
  }

  hgroup, h1, h2, .h2, h3 {
    page-break-after: avoid;
    break-after: avoid;
  }

  .cover .title {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }

  figure {
    page-break-inside: avoid;
    break-inside: avoid;
  }

  a {
    text-decoration: none !important;
  }

  /* Support for numbered reference section as article footer. */
  .print-references article {
    counter-reset: href;
  }

  .print-references article a {
    counter-increment: href;
  }

  .print-references article a[href^="https://apparebit.com"],
  .print-references .references a {
    counter-increment: none;
  }

  .print-references article a::after {
    content: ' [' counter(href) ']';
    /* Lining figures look a tad awkward. Omit. */
  }

  .print-references article a[href^="https://apparebit.com"]::after,
  .print-references .references a::after {
    content: none;
  }

  footer.references {
    display: grid;
  }
}
